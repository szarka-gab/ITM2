/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.15
 * Generated at: 2015-05-31 15:02:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;
import java.io.*;
import java.net.*;
import itm.image.*;
import itm.model.*;
import itm.util.*;

public final class graph_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!--\r\n");
      out.write("/*******************************************************************************\r\n");
      out.write(" This file is part of the WM.II.ITM course 2014\r\n");
      out.write(" (c) University of Vienna 2009-2014\r\n");
      out.write(" *******************************************************************************/\r\n");
      out.write("-->\r\n");
      out.write("\r\n");
      out.write("<graphml xmlns=\"http://graphml.graphdrawing.org/xmlns\"  \r\n");
      out.write("    xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n");
      out.write("    xsi:schemaLocation=\"http://graphml.graphdrawing.org/xmlns\r\n");
      out.write("     http://graphml.graphdrawing.org/xmlns/1.0/graphml.xsd\">\r\n");
      out.write("  <graph id=\"G\" edgedefault=\"undirected\">\r\n");
      out.write("\r\n");
      out.write("    <key id=\"name\" for=\"node\" attr.name=\"name\" attr.type=\"string\"/>\r\n");
      out.write("    <key id=\"url\" for=\"node\" attr.name=\"url\" attr.type=\"string\"/>\r\n");
      out.write("    <key id=\"type\" for=\"node\" attr.name=\"type\" attr.type=\"string\"/>\r\n");
      out.write("\r\n");
      out.write("    <node id=\"n0\">\r\n");
      out.write("        <data key=\"type\">concept</data>\r\n");
      out.write("        <data key=\"name\">Tags</data>\r\n");
      out.write("        <data key=\"url\">http://localhost:8080/itm/</data>\r\n");
      out.write("    </node>\r\n");
      out.write("\r\n");
      out.write("    ");

        // get all media objects
        ArrayList<AbstractMedia> media = MediaFactory.getMedia();
        
        // List for storing tag-nodes
        Hashtable<String,String> tagNodes = new Hashtable<String,String>();

        // ***************************************************************
        //  Fill in your code here!
        // ***************************************************************
        
        // iterate over all available media objects
        int c=2;
        for ( AbstractMedia medium : media ) {
            c++;
            if ( medium instanceof ImageMedia ) {
                } else
            if ( medium instanceof AudioMedia ) {
                } else
            if ( medium instanceof VideoMedia ) {
                }

            // create tag nodes (and respective edges) if not existing
            }
    
      out.write("\r\n");
      out.write("        \r\n");
      out.write("     \r\n");
      out.write("  </graph>\r\n");
      out.write("</graphml>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
